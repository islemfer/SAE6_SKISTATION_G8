pipeline {
    environment { 
        registry = "islemferchichi/projetdevops" 
        registryCredential = 'dockerhubcridential' 
    }

    agent any

    stages {
        stage('Nettoyage et compilation Maven') {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage('SonarQube analyse') {
            steps {
                script {
                    withSonarQubeEnv(installationName: 'sq1') {
                        sh 'mvn sonar:sonar'
                    }
                }
            }
        }

        stage('Mockito & JUnit test') {
            steps {
                script {
                    sh 'mvn test'
                }
            }
        }

        stage('Nexus') {
            steps {
                script {
                    sh 'mvn deploy -DskipTests'
                }
            }
        }

        stage('Docker Image') { 
            steps { 
                script { 
                    dockerImage = docker.build registry + ":ImageSpringboot" 
                }
            } 
        }

        stage('Deploy Image') { 
            steps { 
                script { 
                    docker.withRegistry('', registryCredential) { 
                        dockerImage.push() 
                    }
                } 
            }
        }

        stage('Docker Compose') {
            steps {
                sh 'docker compose up -d'
            }
        }

        // stage('Quality Gate') {
        //     steps {
        //         timeout(time: 5, unit: 'MINUTES') {
        //             waitForQualityGate abortPipeline: true
        //         }
        //     }
        // }
    }
}

